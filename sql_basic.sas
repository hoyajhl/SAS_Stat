*****SQL in SAS;
PROC SQL;
	CREATE TABLE TEST AS
	SELECT NAME, AGE, COMPRESS(NAME,'스') AS COMPRESS,  
	TRANSLATE(NAME,'AA','스') AS TRANS
	,TRANWRD(NAME,'스','AAAA') AS TRANSWRD, SUBSTR(NAME,1,2) AS SUBSTR, CATX('-',NAME,SEX) AS CATX
	,FIND(NAME,'스') AS FIND, PUT(AGE,5.) AS PUT, COMPRESS(PUT(AGE,5.)) AS COM_PUT
	FROM SASHELP.CLASS; 
QUIT; *COMPRESS 변수에서 '스' 제외,CATX는 결합,  PUT명령어는 숫자 칼럼을 문자 칼럼으로 변경;
*****조건에 맞는 where 함수 SQL;
PROC SQL;
	CREATE TABLE TEST AS
	SELECT NAME, AGE, HEIGHT
	FROM SASHELP.CLASS
	WHERE AGE=12 AND 59<=HEIGHT<=61;
QUIT;
***정렬 SQL ORDER BY DESC;
PROC SQL;
	CREATE TABLE TEST AS
	SELECT *
	FROM SASHELP.CLASS
	ORDER BY AGE DESC , HEIGHT DESC;  *아무 옵션 없으면 ascending order;
QUIT;
*CASE WHEN  구문 SQL ;
PROC SQL;
	CREATE TABLE TEST AS
	SELECT *,
	CASE WHEN AGE=12 THEN '열두살' 
	WHEN AGE=13 THEN '열세살' 
	WHEN AGE=14 THEN '열넷'
	ELSE '나머지' END AS NEW_AGE
	FROM SASHELP.CLASS;
QUIT; 
*group by 함수;
PROC SQL;
    CREATE TABLE TEST AS 
    SELECT *, SUM(AGE) AS SUM_AGE
    FROM SASHELP.CLASS
    GROUP BY SEX;
QUIT;
*HAVING명령어는 GROUP BY명령어와 함께 쓰이고 
GROUP BY명령어의 결과값을 
대상으로 조건을 만족하는 행만 추출하는 명령어;
PROC SQL;
	CREATE TABLE TEST AS 
	SELECT *, SUM(AGE) AS SUM_AGE
	FROM SASHELP.CLASS	
	GROUP BY SEX
	HAVING SUM_AGE>120;  /*칼럼SUM_AGE의 값이 120 이상인 행만 추출*/
QUIT;
*SQL 명령어 순서; 
PROC SQL;   
	CREATE TABLE TEST AS    
	SELECT *, SUM(AGE) AS SUM_AGE 
	FROM SASHELP.CLASS 
	WHERE HEIGHT < 65   /*칼럼HEIGHT가 65 이하인 행 대상*/
	GROUP BY SEX    /*칼럼SEX의 값을 나눔*/
	HAVING SUM_AGE > 90 /*칼럼SUM_AGE의 값이 90 이상인 행만 추출*/
	ORDER BY NAME;  /*칼럼NAME의 순서대로 정렬*/
QUIT;   
*CALCULATED 활용: 생성된 column 바로 적용 가능 옵션;
PROC SQL;  
	CREATE TABLE TEST_1 AS  
	SELECT *, AGE+1 AS AGE_new,   
	CASE WHEN CALCULATED AGE_new=13 THEN 'A'
	WHEN CALCULATED AGE_new=14 THEN 'B' 
	ELSE 'C' END AS CHECK_1  
	FROM SASHELP.CLASS;
QUIT;  
